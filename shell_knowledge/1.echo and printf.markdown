# echo and printf

## Options of echo

1. `-n`: This option tells `echo` not to print a newline character at the end of the text

2. `-e`: This option enables interpretation of backslash escapes

3. `-E`: This is the opposite of `-e`; it disables the interpretation of backslash escapes

The `printf` command is a shell utility that mimics the `printf()` function from the C programming library. Unlike `echo`, `printf` does not automatically append a newline character, so you can add it manually with `\n`.

The basic syntax of `printf` is:
```bash
printf format-string [arguments...]
```
Here are some common format specifiers:
- `%s`: String
- `%d`: Decimal integer
- `%f`: Floating-point number
- `%c`: Character

Here is the provided bash script translated into English:
```bash
#!/bin/bash

printf "%-10s %-8s %-4s\n" Name Gender Weight(kg)
printf "%-10s %-8s %-4.2f\n" "Guo Jing" Male 66.1234
printf "%-10s %-8s %-4.2f\n" "Yang Guo" Male 48.6543
printf "%-10s %-8s %-4.2f\n" "Guo Fu" Female 47.9876
```
- `%-10s`: Indicates that the output should be a left-aligned string that occupies a width of 10 characters. If the string length is less than 10 characters, the remaining space is filled with spaces.