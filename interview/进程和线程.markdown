线程和进程的区别？最小执行单元是进程还是线程

<hr>

### 进程（Process）
1. **定义**：进程是操作系统进行资源分配和调度的一个独立单位，是应用程序运行的实例。
2. **地址空间**：每个进程拥有独立的地址空间，进程间的内存是相互隔离的。
3. **资源占用**：进程具有独立的资源集，如文件描述符、I/O 等。
4. **创建开销**：创建和终止进程的开销相对较大，因为涉及到系统资源的分配和回收。
5. **通信方式**：进程间通信（IPC）通常通过更为复杂的机制，如管道、消息队列、共享内存或套接字等。
6. **执行**：进程中的代码执行是顺序的，一个进程内的任务需要排队等待执行。

### 线程（Thread）
1. **定义**：线程是进程中的一个实体，是系统调度执行的最小单位，被称为轻量级的进程。
2. **地址空间**：同一进程内的线程共享进程的地址空间，即共享内存和文件描述符等资源。
3. **资源占用**：线程创建和终止的开销较小，因为它们共享父进程的资源。
4. **执行**：线程可以并发执行，一个进程可以包含多个并发执行的线程。
5. **通信方式**：线程间的通信更为简单，因为它们共享相同的内存空间，可以直接访问对方的变量和数据结构。
6. **执行效率**：由于线程共享同一进程的资源，因此线程间的切换和通信效率较高。

### 最小执行单元
在现代操作系统中，**线程**通常被认为是最小执行单元。这是因为线程负责执行程序代码，而进程更多地是作为资源分配和保护的单位。线程是程序实际执行工作的地方，它们拥有自己的执行栈和程序计数器，能够独立执行指令。

然而，值得注意的是，虽然线程是执行的最小单元，但进程提供了线程运行所需的环境和资源。一个进程至少包含一个线程（通常称为主线程），进程的创建是线程创建的前提。在多线程程序中，线程共享进程的资源，但各自独立执行任务。